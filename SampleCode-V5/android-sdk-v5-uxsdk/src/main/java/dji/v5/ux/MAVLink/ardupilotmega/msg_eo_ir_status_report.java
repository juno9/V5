/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE EO_IR_STATUS_REPORT PACKING
package dji.v5.ux.MAVLink.ardupilotmega;
import dji.v5.ux.MAVLink.MAVLinkPacket;
import dji.v5.ux.MAVLink.Messages.MAVLinkMessage;
import dji.v5.ux.MAVLink.Messages.MAVLinkPayload;
        
/**
* EO/IR camera control setting status.
*/
public class msg_eo_ir_status_report extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_EO_IR_STATUS_REPORT = 12007;
    public static final int MAVLINK_MSG_ID_EO_IR_STATUS_REPORT_CRC = 186;
    public static final int MAVLINK_MSG_LENGTH = 20;
    private static final long serialVersionUID = MAVLINK_MSG_ID_EO_IR_STATUS_REPORT;


      
    /**
    * EO/IR Camera Header1
    */
    public short header1;
      
    /**
    * EO/IR Camera Header2
    */
    public short header2;
      
    /**
    * EO/IR Camera Header3
    */
    public short header3;
      
    /**
    * Reserved1
    */
    public short reserved1;
      
    /**
    * Reserved2
    */
    public short reserved2;
      
    /**
    * Bitmap of EO/IR Camera Mode Report flags.
    */
    public short mode_status;
      
    /**
    * Reserved3
    */
    public short reserved3;
      
    /**
    * Bitmap of EO/IR Camera Record Status flags.
    */
    public short record_status;
      
    /**
    * FOV Status
    */
    public short fov_report;
      
    /**
    * EO/IR Camera Tilt Rate LSB([0:7 bits] - Tilt Rate LSB[7:0])
    */
    public short tilt_rate_lsb;
      
    /**
    * EO/IR Camera Tilt Rate MSB([0:1 bits] - Tilt Rate MSB[11:8])
    */
    public short tilt_rate_msb;
      
    /**
    * EO/IR Camera Pan Rate LSB([0:7 bits] - Pan Rate LSB[7:0])
    */
    public short pan_rate_lsb;
      
    /**
    * EO/IR Camera Pan Rate MSB([0:1 bits] - Pan Rate MSB[11:8])
    */
    public short pan_rate_msb;
      
    /**
    * Reserved4
    */
    public short reserved4;
      
    /**
    * Reserved5
    */
    public short reserved5;
      
    /**
    * Reserved6
    */
    public short reserved6;
      
    /**
    * Reserved7
    */
    public short reserved7;
      
    /**
    * Reserved8
    */
    public short reserved8;
      
    /**
    * Reserved9
    */
    public short reserved9;
      
    /**
    * EO/IR Report CRC
    */
    public short eo_ir_report_crc;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_EO_IR_STATUS_REPORT;
        packet.crc_extra = MAVLINK_MSG_ID_EO_IR_STATUS_REPORT_CRC;
              
        packet.payload.putUnsignedByte(header1);
              
        packet.payload.putUnsignedByte(header2);
              
        packet.payload.putUnsignedByte(header3);
              
        packet.payload.putUnsignedByte(reserved1);
              
        packet.payload.putUnsignedByte(reserved2);
              
        packet.payload.putUnsignedByte(mode_status);
              
        packet.payload.putUnsignedByte(reserved3);
              
        packet.payload.putUnsignedByte(record_status);
              
        packet.payload.putUnsignedByte(fov_report);
              
        packet.payload.putUnsignedByte(tilt_rate_lsb);
              
        packet.payload.putUnsignedByte(tilt_rate_msb);
              
        packet.payload.putUnsignedByte(pan_rate_lsb);
              
        packet.payload.putUnsignedByte(pan_rate_msb);
              
        packet.payload.putUnsignedByte(reserved4);
              
        packet.payload.putUnsignedByte(reserved5);
              
        packet.payload.putUnsignedByte(reserved6);
              
        packet.payload.putUnsignedByte(reserved7);
              
        packet.payload.putUnsignedByte(reserved8);
              
        packet.payload.putUnsignedByte(reserved9);
              
        packet.payload.putUnsignedByte(eo_ir_report_crc);
        
        return packet;
    }

    /**
    * Decode a eo_ir_status_report message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.header1 = payload.getUnsignedByte();
              
        this.header2 = payload.getUnsignedByte();
              
        this.header3 = payload.getUnsignedByte();
              
        this.reserved1 = payload.getUnsignedByte();
              
        this.reserved2 = payload.getUnsignedByte();
              
        this.mode_status = payload.getUnsignedByte();
              
        this.reserved3 = payload.getUnsignedByte();
              
        this.record_status = payload.getUnsignedByte();
              
        this.fov_report = payload.getUnsignedByte();
              
        this.tilt_rate_lsb = payload.getUnsignedByte();
              
        this.tilt_rate_msb = payload.getUnsignedByte();
              
        this.pan_rate_lsb = payload.getUnsignedByte();
              
        this.pan_rate_msb = payload.getUnsignedByte();
              
        this.reserved4 = payload.getUnsignedByte();
              
        this.reserved5 = payload.getUnsignedByte();
              
        this.reserved6 = payload.getUnsignedByte();
              
        this.reserved7 = payload.getUnsignedByte();
              
        this.reserved8 = payload.getUnsignedByte();
              
        this.reserved9 = payload.getUnsignedByte();
              
        this.eo_ir_report_crc = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_eo_ir_status_report(){
        msgid = MAVLINK_MSG_ID_EO_IR_STATUS_REPORT;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_eo_ir_status_report(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_EO_IR_STATUS_REPORT;
        unpack(mavLinkPacket.payload);
    }

                                            
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_EO_IR_STATUS_REPORT - sysid:"+sysid+" compid:"+compid+" header1:"+header1+" header2:"+header2+" header3:"+header3+" reserved1:"+reserved1+" reserved2:"+reserved2+" mode_status:"+mode_status+" reserved3:"+reserved3+" record_status:"+record_status+" fov_report:"+fov_report+" tilt_rate_lsb:"+tilt_rate_lsb+" tilt_rate_msb:"+tilt_rate_msb+" pan_rate_lsb:"+pan_rate_lsb+" pan_rate_msb:"+pan_rate_msb+" reserved4:"+reserved4+" reserved5:"+reserved5+" reserved6:"+reserved6+" reserved7:"+reserved7+" reserved8:"+reserved8+" reserved9:"+reserved9+" eo_ir_report_crc:"+eo_ir_report_crc+"";
    }
}
        