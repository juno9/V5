/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE PL_RF_CONFIG PACKING
package dji.v5.ux.MAVLink.ardupilotmega;
import dji.v5.ux.MAVLink.MAVLinkPacket;
import dji.v5.ux.MAVLink.Messages.MAVLinkMessage;
import dji.v5.ux.MAVLink.Messages.MAVLinkPayload;
        
/**
* 2.4GHz wireless communication RF settings.
*/
public class msg_pl_rf_config extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_PL_RF_CONFIG = 12002;
    public static final int MAVLINK_MSG_ID_PL_RF_CONFIG_CRC = 16;
    public static final int MAVLINK_MSG_LENGTH = 35;
    private static final long serialVersionUID = MAVLINK_MSG_ID_PL_RF_CONFIG;


      
    /**
    * RF Operation Distance
    */
    public int wireless_distance;
      
    /**
    * Radio On Off Control
    */
    public short radio_enable;
      
    /**
    * Radio Channel Bandwitdh
    */
    public short channel_bandwidth;
      
    /**
    * Radio Channel Frequency
    */
    public short channel_frequency;
      
    /**
    * Tx RF Power Control
    */
    public short tx_rf_power;
      
    /**
    * MIMO On Off Control
    */
    public short mimo;
      
    /**
    * RF Operation Mode
    */
    public short rf_operation_mode;
      
    /**
    * Network ID
    */
    public byte network_id[] = new byte[10];
      
    /**
    * Encryption Type
    */
    public short encryption_type;
      
    /**
    * Encryption Key values
    */
    public short encryption_key[] = new short[16];
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_PL_RF_CONFIG;
        packet.crc_extra = MAVLINK_MSG_ID_PL_RF_CONFIG_CRC;
              
        packet.payload.putUnsignedShort(wireless_distance);
              
        packet.payload.putUnsignedByte(radio_enable);
              
        packet.payload.putUnsignedByte(channel_bandwidth);
              
        packet.payload.putUnsignedByte(channel_frequency);
              
        packet.payload.putUnsignedByte(tx_rf_power);
              
        packet.payload.putUnsignedByte(mimo);
              
        packet.payload.putUnsignedByte(rf_operation_mode);
              
        
        for (int i = 0; i < network_id.length; i++) {
            packet.payload.putByte(network_id[i]);
        }
                    
              
        packet.payload.putUnsignedByte(encryption_type);
              
        
        for (int i = 0; i < encryption_key.length; i++) {
            packet.payload.putUnsignedByte(encryption_key[i]);
        }
                    
        
        return packet;
    }

    /**
    * Decode a pl_rf_config message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.wireless_distance = payload.getUnsignedShort();
              
        this.radio_enable = payload.getUnsignedByte();
              
        this.channel_bandwidth = payload.getUnsignedByte();
              
        this.channel_frequency = payload.getUnsignedByte();
              
        this.tx_rf_power = payload.getUnsignedByte();
              
        this.mimo = payload.getUnsignedByte();
              
        this.rf_operation_mode = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.network_id.length; i++) {
            this.network_id[i] = payload.getByte();
        }
                
              
        this.encryption_type = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.encryption_key.length; i++) {
            this.encryption_key[i] = payload.getUnsignedByte();
        }
                
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_pl_rf_config(){
        msgid = MAVLINK_MSG_ID_PL_RF_CONFIG;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_pl_rf_config(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_PL_RF_CONFIG;
        unpack(mavLinkPacket.payload);
    }

                   
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setNetwork_Id(String str) {
        int len = Math.min(str.length(), 10);
        for (int i=0; i<len; i++) {
            network_id[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<10; i++) {            // padding for the rest of the buffer
            network_id[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getNetwork_Id() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 10; i++) {
            if (network_id[i] != 0)
                buf.append((char) network_id[i]);
            else
                break;
        }
        return buf.toString();

    }
                             
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_PL_RF_CONFIG - sysid:"+sysid+" compid:"+compid+" wireless_distance:"+wireless_distance+" radio_enable:"+radio_enable+" channel_bandwidth:"+channel_bandwidth+" channel_frequency:"+channel_frequency+" tx_rf_power:"+tx_rf_power+" mimo:"+mimo+" rf_operation_mode:"+rf_operation_mode+" network_id:"+network_id+" encryption_type:"+encryption_type+" encryption_key:"+encryption_key+"";
    }
}
        